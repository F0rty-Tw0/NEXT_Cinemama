@mixin for-phone-only {
  @media (max-width: 599px) {
    @content;
  }
}
@mixin for-tablet-portrait-up {
  @media (min-width: 600px) {
    @content;
  }
}
@mixin for-tablet-landscape-up {
  @media (min-width: 900px) {
    @content;
  }
}
@mixin for-tablet-landscape-down {
  @media (max-width: 1000px) {
    @content;
  }
}
@mixin for-desktop-up {
  @media (min-width: 1281px) {
    @content;
  }
}
@mixin for-big-desktop-up {
  @media (min-width: 1800px) {
    @content;
  }
}

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@function calculate-font($min-font-size, $max-font-size, $min-vw, $max-vw, $multiplier: 0) {
  @return calc( #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
  ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}) + #{$multiplier}px)
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calculate-font($min-font-size, $max-font-size, $min-vw, $max-vw);

        $heading-scale: 4; // amount of px headings grow from h6 to h1

        @for $i from 1 through 6 {
          h#{$i} {
            $multiplier: $heading-scale * (6 - $i);
            font-size: calculate-font($min-font-size, $max-font-size, $min-vw, $max-vw, $multiplier);
          }
        }
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}
